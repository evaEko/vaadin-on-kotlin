apply plugin: 'maven-publish'
apply plugin: 'kotlin'
apply plugin: "com.jfrog.bintray"

dependencies {
    compile(project(':vok-framework'))
    compile(project(':vok-util-vaadin8'))

    testCompile("com.github.mvysny.dynatest:dynatest:${dynatest_version}")

    // db
    compile('org.hibernate:hibernate-core:5.3.0.Final') {
        exclude group: 'javax.enterprise'  // there is no need for CDI-API nor @Inject stuff
    }
    // support for Java 9: https://stackoverflow.com/questions/48986999/classnotfoundexception-for-javax-xml-bind-jaxbexception-with-spring-boot-when-sw
    compile 'javax.xml.bind:jaxb-api:2.3.0'

    testCompile "org.flywaydb:flyway-core:${flyway_version}"
    testCompile "com.h2database:h2:$h2_version"
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId 'vok-framework-jpa'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'VoK: Vaadin8+JPA integration')
                root.appendNode('name', 'vok-framework-jpa')
                root.appendNode('url', 'https://github.com/mvysny/vaadin-on-kotlin')
            }
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

build.dependsOn publishToMavenLocal

bintray {
    user = local.getProperty('bintray.user')
    key = local.getProperty('bintray.key')
    pkg {
        repo = 'github'
        name = 'vaadin-on-kotlin'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/mvysny/vaadin-on-kotlin'
        publish = true
        publications = ['mavenJava']
        version {
            name = project.version
            released = new Date()
        }
    }
}

